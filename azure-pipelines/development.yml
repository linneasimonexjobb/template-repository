# Node.js with Vue
# Build a Node.js project that uses Vue.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches: 
    exclude:
    - main
  paths: 
    exclude:
    - docs/*
 
pool:
  vmImage: 'ubuntu-22.04'
 
stages:
- stage: BuildLintUnitTest
  jobs:
  - job: RunProject
    displayName: 'Build, Lint, Unit-test project'
    timeoutInMinutes: 10
    steps:
    - checkout: self
 
    - task: # Choose suitable Azure task
      inputs:
        versionSpec: '18.x'
      displayName: 'Install x'
 
    # Set up cache
    - task: Cache@2
      inputs:
        key: 
        path: 
        restoreKeys: 
      displayName: Cachex

    # Set up install command
    - script: echo "install"
      displayName: 'Install dependencies'
 
    # Set up linting command
    - script: echo "linting"
      displayName: 'Linting'
 
    # Set upp build command
    - script: echo "build"
      displayName: 'Build'
 
    # Set up unit test command
    - script: echo "test"
      displayName: 'Run Tests'
 
    # Set up commands for test coverage
    - script: |
        echo "generate test files" # most tests frameworks can generate a json or txt file which data such as total lines/functions/etc covererd.
        COVERAGE_VAR=$(jq -r '.your.json.file.format' < testfile.json) # IF json file, change your.json.file to the correct query and testfile to correct file
        if [ $COVERAGE_VAR -lt 80 ]; then
          echo "Coverage below threshold ($COVERAGE_VAR). Please improve test coverage."
        else
          echo "Coverage: $COVERAGE_VAR%"
        fi
      displayName: 'Retrieve unit test coverage'
 